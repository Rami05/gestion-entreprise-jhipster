{"remainingRequest":"/home/spark/Bureau/jhipter-monolotic/node_modules/thread-loader/dist/cjs.js??ref--9-2!/home/spark/Bureau/jhipter-monolotic/node_modules/ts-loader/index.js??ref--9-3!/home/spark/Bureau/jhipter-monolotic/node_modules/angular-router-loader/src/index.js!/home/spark/Bureau/jhipter-monolotic/node_modules/tslint-loader/index.js!/home/spark/Bureau/jhipter-monolotic/src/main/webapp/app/entities/employe/employe-update.component.ts","dependencies":[{"path":"/home/spark/Bureau/jhipter-monolotic/src/main/webapp/app/entities/employe/employe-update.component.ts","mtime":1601547607840},{"path":"/home/spark/Bureau/jhipter-monolotic/node_modules/angular2-template-loader/index.js","mtime":1486570058000},{"path":"/home/spark/Bureau/jhipter-monolotic/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/spark/Bureau/jhipter-monolotic/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/spark/Bureau/jhipter-monolotic/node_modules/ts-loader/index.js","mtime":1545640398000},{"path":"/home/spark/Bureau/jhipter-monolotic/node_modules/angular-router-loader/src/index.js","mtime":1512749902000},{"path":"/home/spark/Bureau/jhipter-monolotic/node_modules/tslint-loader/index.js","mtime":1519899048000}],"contextDependencies":[],"result":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar core_1 = require(\"@angular/core\");\nvar router_1 = require(\"@angular/router\");\nvar employe_service_1 = require(\"./employe.service\");\nvar EmployeUpdateComponent = /** @class */ (function () {\n    function EmployeUpdateComponent(employeService, activatedRoute) {\n        this.employeService = employeService;\n        this.activatedRoute = activatedRoute;\n    }\n    EmployeUpdateComponent.prototype.ngOnInit = function () {\n        var _this = this;\n        this.isSaving = false;\n        this.activatedRoute.data.subscribe(function (_a) {\n            var employe = _a.employe;\n            _this.employe = employe;\n        });\n    };\n    EmployeUpdateComponent.prototype.previousState = function () {\n        window.history.back();\n    };\n    EmployeUpdateComponent.prototype.save = function () {\n        this.isSaving = true;\n        if (this.employe.id !== undefined) {\n            this.subscribeToSaveResponse(this.employeService.update(this.employe));\n        }\n        else {\n            this.subscribeToSaveResponse(this.employeService.create(this.employe));\n        }\n    };\n    EmployeUpdateComponent.prototype.subscribeToSaveResponse = function (result) {\n        var _this = this;\n        result.subscribe(function (res) { return _this.onSaveSuccess(); }, function (res) { return _this.onSaveError(); });\n    };\n    EmployeUpdateComponent.prototype.onSaveSuccess = function () {\n        this.isSaving = false;\n        this.previousState();\n    };\n    EmployeUpdateComponent.prototype.onSaveError = function () {\n        this.isSaving = false;\n    };\n    var _a, _b;\n    EmployeUpdateComponent = tslib_1.__decorate([\n        core_1.Component({\n            selector: 'jhi-employe-update',\n            templateUrl: './employe-update.component.html'\n        }),\n        tslib_1.__metadata(\"design:paramtypes\", [typeof (_a = typeof employe_service_1.EmployeService !== \"undefined\" && employe_service_1.EmployeService) === \"function\" ? _a : Object, typeof (_b = typeof router_1.ActivatedRoute !== \"undefined\" && router_1.ActivatedRoute) === \"function\" ? _b : Object])\n    ], EmployeUpdateComponent);\n    return EmployeUpdateComponent;\n}());\nexports.EmployeUpdateComponent = EmployeUpdateComponent;\n",{"version":3,"file":"/home/spark/Bureau/jhipter-monolotic/src/main/webapp/app/entities/employe/employe-update.component.ts","sourceRoot":"","sources":["/home/spark/Bureau/jhipter-monolotic/node_modules/angular-router-loader/src/index.js!/home/spark/Bureau/jhipter-monolotic/node_modules/tslint-loader/index.js!/home/spark/Bureau/jhipter-monolotic/src/main/webapp/app/entities/employe/employe-update.component.ts"],"names":[],"mappings":";;;AAAA,sCAAkD;AAClD,0CAAiD;AAKjD,qDAAmD;AAMnD;IAII,gCAAsB,cAA8B,EAAY,cAA8B;QAAxE,mBAAc,GAAd,cAAc,CAAgB;QAAY,mBAAc,GAAd,cAAc,CAAgB;IAAG,CAAC;IAElG,yCAAQ,GAAR;QAAA,iBAKC;QAJG,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QACtB,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,SAAS,CAAC,UAAC,EAAW;gBAAT,oBAAO;YACzC,KAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QAC3B,CAAC,CAAC,CAAC;IACP,CAAC;IAED,8CAAa,GAAb;QACI,MAAM,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;IAC1B,CAAC;IAED,qCAAI,GAAJ;QACI,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QACrB,IAAI,IAAI,CAAC,OAAO,CAAC,EAAE,KAAK,SAAS,EAAE;YAC/B,IAAI,CAAC,uBAAuB,CAAC,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;SAC1E;aAAM;YACH,IAAI,CAAC,uBAAuB,CAAC,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;SAC1E;IACL,CAAC;IAES,wDAAuB,GAAjC,UAAkC,MAA0C;QAA5E,iBAEC;QADG,MAAM,CAAC,SAAS,CAAC,UAAC,GAA2B,IAAK,OAAA,KAAI,CAAC,aAAa,EAAE,EAApB,CAAoB,EAAE,UAAC,GAAsB,IAAK,OAAA,KAAI,CAAC,WAAW,EAAE,EAAlB,CAAkB,CAAC,CAAC;IAC5H,CAAC;IAES,8CAAa,GAAvB;QACI,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QACtB,IAAI,CAAC,aAAa,EAAE,CAAC;IACzB,CAAC;IAES,4CAAW,GAArB;QACI,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;IAC1B,CAAC;;IArCQ,sBAAsB;QAJlC,gBAAS,CAAC;YACP,QAAQ,EAAE,oBAAoB;YAC9B,WAAW,EAAE,iCAAiC;SACjD,CAAC;qEAKwC,gCAAc,oBAAd,gCAAc,oDAA4B,uBAAc,oBAAd,uBAAc;OAJrF,sBAAsB,CAsClC;IAAD,6BAAC;CAAA,AAtCD,IAsCC;AAtCY,wDAAsB","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { HttpResponse, HttpErrorResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\nimport { IEmploye } from 'app/shared/model/employe.model';\nimport { EmployeService } from './employe.service';\n\n@Component({\n    selector: 'jhi-employe-update',\n    templateUrl: './employe-update.component.html'\n})\nexport class EmployeUpdateComponent implements OnInit {\n    employe: IEmploye;\n    isSaving: boolean;\n\n    constructor(protected employeService: EmployeService, protected activatedRoute: ActivatedRoute) {}\n\n    ngOnInit() {\n        this.isSaving = false;\n        this.activatedRoute.data.subscribe(({ employe }) => {\n            this.employe = employe;\n        });\n    }\n\n    previousState() {\n        window.history.back();\n    }\n\n    save() {\n        this.isSaving = true;\n        if (this.employe.id !== undefined) {\n            this.subscribeToSaveResponse(this.employeService.update(this.employe));\n        } else {\n            this.subscribeToSaveResponse(this.employeService.create(this.employe));\n        }\n    }\n\n    protected subscribeToSaveResponse(result: Observable<HttpResponse<IEmploye>>) {\n        result.subscribe((res: HttpResponse<IEmploye>) => this.onSaveSuccess(), (res: HttpErrorResponse) => this.onSaveError());\n    }\n\n    protected onSaveSuccess() {\n        this.isSaving = false;\n        this.previousState();\n    }\n\n    protected onSaveError() {\n        this.isSaving = false;\n    }\n}\n"]}]}